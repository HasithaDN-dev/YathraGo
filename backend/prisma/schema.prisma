// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


model Vehicle {
  id Int @id @default(autoincrement())
  type String 
  brand String
  model String
  manufactureYear Int
  registrationNumber String
  color String
  route String[]
  no_of_seats Int
  air_conditioned Boolean @default(false)
  assistant Boolean @default(false)
  rear_picture_url String
  front_picture_url String
  side_picture_url String
  inside_picture_url String
  revenue_license_url String
  insurance_front_url String
  insurance_back_url String
  vehicle_reg_url String

}

model Chat {
  id Int @id @default(autoincrement())
  message String
  timestamp DateTime @default(now())
  seen Boolean @default(false)

}

model BackupDriver {
  id Int @id @default(autoincrement())
  name String
  phone String
  vehicle_Reg_No String
  NIC String
}

model Absence {
  id Int @id @default(autoincrement())
  date DateTime
  reason String
  submittedAt DateTime @default(now())
}

model DriverNotification {
  id Int @id @default(autoincrement())
  title String
  message String
  date DateTime @default(now())

  
}

model MonthlyPayment {
  id Int @id @default(autoincrement())
  amount Float
  paid Boolean @default(false)
  paymentDate DateTime @default(now())
  month String
  Status String @default("Pending") // Pending, Paid, Overdue
 
}

model PaymentBalance {
  id Int @id @default(autoincrement())
  month String
  amountDue Float
  balance    Float
  date DateTime @default(now())
  description String
  type String // Income or Expense
}

model StaffEmergency {
  id Int @id @default(autoincrement())
  type String 
  description String
  OccurrenceDate DateTime

}

model ChildEmergency {
  id Int @id @default(autoincrement())
  type String 
  description String
  OccurrenceDate DateTime
  
}

model Driver {
  id Int @id @default(autoincrement())
  first_name String
  last_name String
  phone String
  second_phone String
  gender String
  vehicle_Reg_No String
  NIC String
  address String
  profile_picture_url String
  dirver_license_front_url String
  driver_license_back_url String
  nic_front_pic_url String
  nice_back_pic_url String
  date_of_birth DateTime
  date_of_joining DateTime @default(now())
}

model FoundedBackupDrivers {
  id Int @id @default(autoincrement())
}

model VehicleOwner {
  id Int @id @default(autoincrement())
  first_name String
  last_name String
  phone String
  email String
}

model Customer {
  user_id           Int      @id @default(autoincrement())
  name              String
  email             String  
  contact           String  
  otp               String   
  address           String
  profileImageUrl   String
  emergencyContact  String   
  status            String
  createdAt         DateTime 
}

model Complaints {
  complaint_id Int    @id @default(autoincrement())
  description  String
  type         String
  createdAt    DateTime @default(now())
}

model Inquires {
  inquiry_id   Int    @id @default(autoincrement())
  description  String
  createdAt    DateTime @default(now())
}

model Absence {
  absent_id    Int    @id @default(autoincrement())
  reason       String
  createdAt    DateTime @default(now())
}

model Ratings_and_Reviews {
  review_id    Int    @id @default(autoincrement())
  review       String
  ratings      Int
  createdAt    DateTime @default(now())
}

model Child {
  child_id        Int    @id @default(autoincrement())
  relationship    String
  NearbyCity      String
  schoolLocation  String
  school          String
  childName       String
  childImageUrl   String
  pickUpAddress   String
}

model Child_Trip {
  childTrip_id    Int    @id @default(autoincrement())
  date            DateTime @default(now())
  pickUp          String
  dropOff         String
  startTime       DateTime
  endTime         DateTime
}

model Staff_Passenger {
  staff_id        Int    @id @default(autoincrement())
  nearbyCity      String
  workLocation    String
  workAddress     String
  pickUpLocation  String
  pickupAddress   String
}

model Staff_Trip {
  staffTrip_id    Int    @id @default(autoincrement())
  pickUpLocation  String
  dropOffLocation String
  startTime       DateTime
  endTime         DateTime
  date            DateTime @default(now())
}

model Child_Assign_To {
  assign_id       Int    @id @default(autoincrement())
  createdAt       DateTime @default(now())
}